// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 10.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Используйте "RecordedMethod1Params" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinListItem uISwapArrayexeListItem = this.UIDebugWindow.UIFolderViewWindow.UISwapArrayexeListItem;
            WinEdit uITextBox1Edit = this.UISwapArrayWindow.UITextBox1Window.UITextBox1Edit;
            WinEdit uITextBox2Edit = this.UISwapArrayWindow.UITextBox2Window.UITextBox2Edit;
            WinEdit uITextBox3Edit = this.UISwapArrayWindow.UITextBox3Window.UITextBox3Edit;
            WinEdit uITextBox4Edit = this.UISwapArrayWindow.UITextBox4Window.UITextBox4Edit;
            WinEdit uITextBox5Edit = this.UISwapArrayWindow.UITextBox5Window.UITextBox5Edit;
            WinButton uIОбменятьButton = this.UISwapArrayWindow.UIОбменятьWindow.UIОбменятьButton;
            WinButton uIЗакрытьButton = this.UISwapArrayWindow.UISwapArrayTitleBar.UIЗакрытьButton;
            #endregion

            // Двойной щелчок "Swap Array.exe" элемент списка
            Mouse.DoubleClick(uISwapArrayexeListItem, new Point(45, 24));

            // Тип "12345678" в "textBox1" надпись
            uITextBox1Edit.Text = this.RecordedMethod1Params.UITextBox1EditText;

            // Тип "{Enter}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.RecordedMethod1Params.UITextBox1EditSendKeys, ModifierKeys.None);

            // Тип "4" в "textBox2" надпись
            uITextBox2Edit.Text = this.RecordedMethod1Params.UITextBox2EditText;

            // Тип "{Enter}" в "textBox2" надпись
            Keyboard.SendKeys(uITextBox2Edit, this.RecordedMethod1Params.UITextBox2EditSendKeys, ModifierKeys.None);

            // Тип "1" в "textBox3" надпись
            uITextBox3Edit.Text = this.RecordedMethod1Params.UITextBox3EditText;

            // Тип "{Enter}" в "textBox3" надпись
            Keyboard.SendKeys(uITextBox3Edit, this.RecordedMethod1Params.UITextBox3EditSendKeys, ModifierKeys.None);

            // Тип "5" в "textBox4" надпись
            uITextBox4Edit.Text = this.RecordedMethod1Params.UITextBox4EditText;

            // Тип "{Enter}" в "textBox4" надпись
            Keyboard.SendKeys(uITextBox4Edit, this.RecordedMethod1Params.UITextBox4EditSendKeys, ModifierKeys.None);

            // Щелчок "Обменять" кнопка
            Mouse.Click(uIОбменятьButton, new Point(25, 11));

            // Убедитесь, что у надписи "textBox5" свойство "Text" равно "56781234"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBox5EditText, uITextBox5Edit.Text);

            // Щелчок "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(11, 15));
        }
        
        /// <summary>
        /// AssertMethod1 - Используйте "AssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITextBox5Edit = this.UIForm1Window.UITextBox5Window.UITextBox5Edit;
            #endregion

            // Убедитесь, что "textBox5" надпись свойство "Text" равно "56781234"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBox5EditText, uITextBox5Edit.Text);
        }
        
        /// <summary>
        /// RecordedMethod2
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinButton uIЗакрытьButton = this.UILAB_TVPPWindow.UILAB_TVPPTitleBar.UIЗакрытьButton;
            #endregion

            // Щелчок "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(16, 13));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UISwapArrayWindow UISwapArrayWindow
        {
            get
            {
                if ((this.mUISwapArrayWindow == null))
                {
                    this.mUISwapArrayWindow = new UISwapArrayWindow();
                }
                return this.mUISwapArrayWindow;
            }
        }
        
        public UILAB_TVPPWindow UILAB_TVPPWindow
        {
            get
            {
                if ((this.mUILAB_TVPPWindow == null))
                {
                    this.mUILAB_TVPPWindow = new UILAB_TVPPWindow();
                }
                return this.mUILAB_TVPPWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UISwapArrayWindow mUISwapArrayWindow;
        
        private UILAB_TVPPWindow mUILAB_TVPPWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "12345678" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "12345678";
        
        /// <summary>
        /// Тип "{Enter}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{Enter}";
        
        /// <summary>
        /// Тип "4" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText = "4";
        
        /// <summary>
        /// Тип "{Enter}" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditSendKeys = "{Enter}";
        
        /// <summary>
        /// Тип "1" в "textBox3" надпись
        /// </summary>
        public string UITextBox3EditText = "1";
        
        /// <summary>
        /// Тип "{Enter}" в "textBox3" надпись
        /// </summary>
        public string UITextBox3EditSendKeys = "{Enter}";
        
        /// <summary>
        /// Тип "5" в "textBox4" надпись
        /// </summary>
        public string UITextBox4EditText = "5";
        
        /// <summary>
        /// Тип "{Enter}" в "textBox4" надпись
        /// </summary>
        public string UITextBox4EditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что "textBox5" надпись свойство "Text" равно "56781234"
        /// </summary>
        public string UITextBox5EditText = "56781234";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UITextBox2Window UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UITextBox3Window UITextBox3Window
        {
            get
            {
                if ((this.mUITextBox3Window == null))
                {
                    this.mUITextBox3Window = new UITextBox3Window(this);
                }
                return this.mUITextBox3Window;
            }
        }
        
        public UITextBox4Window UITextBox4Window
        {
            get
            {
                if ((this.mUITextBox4Window == null))
                {
                    this.mUITextBox4Window = new UITextBox4Window(this);
                }
                return this.mUITextBox4Window;
            }
        }
        
        public UIОбменятьWindow UIОбменятьWindow
        {
            get
            {
                if ((this.mUIОбменятьWindow == null))
                {
                    this.mUIОбменятьWindow = new UIОбменятьWindow(this);
                }
                return this.mUIОбменятьWindow;
            }
        }
        
        public UITextBox5Window UITextBox5Window
        {
            get
            {
                if ((this.mUITextBox5Window == null))
                {
                    this.mUITextBox5Window = new UITextBox5Window(this);
                }
                return this.mUITextBox5Window;
            }
        }
        
        public UIForm1TitleBar UIForm1TitleBar
        {
            get
            {
                if ((this.mUIForm1TitleBar == null))
                {
                    this.mUIForm1TitleBar = new UIForm1TitleBar(this);
                }
                return this.mUIForm1TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UITextBox2Window mUITextBox2Window;
        
        private UITextBox3Window mUITextBox3Window;
        
        private UITextBox4Window mUITextBox4Window;
        
        private UIОбменятьWindow mUIОбменятьWindow;
        
        private UITextBox5Window mUITextBox5Window;
        
        private UIForm1TitleBar mUIForm1TitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox2Window : WinWindow
    {
        
        public UITextBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox3Window : WinWindow
    {
        
        public UITextBox3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox3";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox3Edit
        {
            get
            {
                if ((this.mUITextBox3Edit == null))
                {
                    this.mUITextBox3Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox3Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox3Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox3Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox4Window : WinWindow
    {
        
        public UITextBox4Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox4";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox4Edit
        {
            get
            {
                if ((this.mUITextBox4Edit == null))
                {
                    this.mUITextBox4Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox4Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox4Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox4Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIОбменятьWindow : WinWindow
    {
        
        public UIОбменятьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбменятьButton
        {
            get
            {
                if ((this.mUIОбменятьButton == null))
                {
                    this.mUIОбменятьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбменятьButton.SearchProperties[WinButton.PropertyNames.Name] = "Обменять";
                    this.mUIОбменятьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIОбменятьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбменятьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox5Window : WinWindow
    {
        
        public UITextBox5Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox5";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox5Edit
        {
            get
            {
                if ((this.mUITextBox5Edit == null))
                {
                    this.mUITextBox5Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox5Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox5Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox5Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIForm1TitleBar : WinTitleBar
    {
        
        public UIForm1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinListItem UIWindowsFormsApplicatListItem
        {
            get
            {
                if ((this.mUIWindowsFormsApplicatListItem == null))
                {
                    this.mUIWindowsFormsApplicatListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIWindowsFormsApplicatListItem.SearchProperties[WinListItem.PropertyNames.Name] = "WindowsFormsApplication6.exe";
                    this.mUIWindowsFormsApplicatListItem.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIWindowsFormsApplicatListItem;
            }
        }
        
        public WinListItem UISwapArrayexeListItem
        {
            get
            {
                if ((this.mUISwapArrayexeListItem == null))
                {
                    this.mUISwapArrayexeListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUISwapArrayexeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Swap Array.exe";
                    this.mUISwapArrayexeListItem.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUISwapArrayexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIWindowsFormsApplicatListItem;
        
        private WinListItem mUISwapArrayexeListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UISwapArrayWindow : WinWindow
    {
        
        public UISwapArrayWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Swap Array";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window1 UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window1(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UITextBox2Window1 UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window1(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UITextBox3Window1 UITextBox3Window
        {
            get
            {
                if ((this.mUITextBox3Window == null))
                {
                    this.mUITextBox3Window = new UITextBox3Window1(this);
                }
                return this.mUITextBox3Window;
            }
        }
        
        public UITextBox4Window1 UITextBox4Window
        {
            get
            {
                if ((this.mUITextBox4Window == null))
                {
                    this.mUITextBox4Window = new UITextBox4Window1(this);
                }
                return this.mUITextBox4Window;
            }
        }

        public UITextBox5Window1 UITextBox5Window
        {
            get
            {
                if ((this.mUITextBox5Window == null))
                {
                    this.mUITextBox5Window = new UITextBox5Window1(this);
                }
                return this.mUITextBox5Window;
            }
        }

        public UIОбменятьWindow1 UIОбменятьWindow
        {
            get
            {
                if ((this.mUIОбменятьWindow == null))
                {
                    this.mUIОбменятьWindow = new UIОбменятьWindow1(this);
                }
                return this.mUIОбменятьWindow;
            }
        }
        
        public UISwapArrayTitleBar UISwapArrayTitleBar
        {
            get
            {
                if ((this.mUISwapArrayTitleBar == null))
                {
                    this.mUISwapArrayTitleBar = new UISwapArrayTitleBar(this);
                }
                return this.mUISwapArrayTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window1 mUITextBox1Window;
        
        private UITextBox2Window1 mUITextBox2Window;
        
        private UITextBox3Window1 mUITextBox3Window;
        
        private UITextBox4Window1 mUITextBox4Window;

        private UITextBox5Window1 mUITextBox5Window;
        
        private UIОбменятьWindow1 mUIОбменятьWindow;
        
        private UISwapArrayTitleBar mUISwapArrayTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox1Window1 : WinWindow
    {
        
        public UITextBox1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox2Window1 : WinWindow
    {
        
        public UITextBox2Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox3Window1 : WinWindow
    {
        
        public UITextBox3Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox3";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox3Edit
        {
            get
            {
                if ((this.mUITextBox3Edit == null))
                {
                    this.mUITextBox3Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox3Edit.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUITextBox3Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox3Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox4Window1 : WinWindow
    {
        
        public UITextBox4Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox4";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox4Edit
        {
            get
            {
                if ((this.mUITextBox4Edit == null))
                {
                    this.mUITextBox4Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox4Edit.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUITextBox4Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox4Edit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextBox5Window1 : WinWindow
    {

        public UITextBox5Window1(UITestControl searchLimitContainer) :
            base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox5";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }

        #region Properties
        public WinEdit UITextBox5Edit
        {
            get
            {
                if ((this.mUITextBox5Edit == null))
                {
                    this.mUITextBox5Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox5Edit.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUITextBox5Edit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mUITextBox5Edit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIОбменятьWindow1 : WinWindow
    {
        
        public UIОбменятьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбменятьButton
        {
            get
            {
                if ((this.mUIОбменятьButton == null))
                {
                    this.mUIОбменятьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбменятьButton.SearchProperties[WinButton.PropertyNames.Name] = "Обменять";
                    this.mUIОбменятьButton.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUIОбменятьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбменятьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UISwapArrayTitleBar : WinTitleBar
    {
        
        public UISwapArrayTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Swap Array");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Swap Array");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UILAB_TVPPWindow : WinWindow
    {
        
        public UILAB_TVPPWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LAB_TVPP";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("LAB_TVPP");
            #endregion
        }
        
        #region Properties
        public UILAB_TVPPTitleBar UILAB_TVPPTitleBar
        {
            get
            {
                if ((this.mUILAB_TVPPTitleBar == null))
                {
                    this.mUILAB_TVPPTitleBar = new UILAB_TVPPTitleBar(this);
                }
                return this.mUILAB_TVPPTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UILAB_TVPPTitleBar mUILAB_TVPPTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UILAB_TVPPTitleBar : WinTitleBar
    {
        
        public UILAB_TVPPTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("LAB_TVPP");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("LAB_TVPP");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
}
